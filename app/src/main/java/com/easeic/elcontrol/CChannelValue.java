package com.easeic.elcontrol;

import java.util.Vector;

/**
 * Created by sam on 2016/3/25.
 */
public class CChannelValue {

    static byte[] lv_tbl256={
        0x00,0x01,0x01,0x01,0x02,0x02,0x03,0x03,0x03,0x04,0x04,0x05,0x05,0x05,0x06,0x06,
                0x07,0x07,0x07,0x08,0x08,0x09,0x09,0x09,0x0a,0x0a,0x0a,0x0b,0x0b,0x0c,0x0c,0x0c,
                0x0d,0x0d,0x0e,0x0e,0x0e,0x0f,0x0f,0x10,0x10,0x10,0x11,0x11,0x12,0x12,0x12,0x13,
                0x13,0x14,0x14,0x14,0x15,0x15,0x15,0x16,0x16,0x17,0x17,0x17,0x18,0x18,0x19,0x19,
                0x19,0x1a,0x1a,0x1b,0x1b,0x1b,0x1c,0x1c,0x1d,0x1d,0x1d,0x1e,0x1e,0x1e,0x1f,0x1f,
                0x20,0x20,0x20,0x21,0x21,0x22,0x22,0x22,0x23,0x23,0x24,0x24,0x24,0x25,0x25,0x26,
                0x26,0x26,0x27,0x27,0x28,0x28,0x28,0x29,0x29,0x29,0x2a,0x2a,0x2b,0x2b,0x2b,0x2c,
                0x2c,0x2d,0x2d,0x2d,0x2e,0x2e,0x2f,0x2f,0x2f,0x30,0x30,0x31,0x31,0x31,0x32,0x32,
                0x32,0x33,0x33,0x34,0x34,0x34,0x35,0x35,0x36,0x36,0x36,0x37,0x37,0x38,0x38,0x38,
                0x39,0x39,0x3a,0x3a,0x3a,0x3b,0x3b,0x3c,0x3c,0x3c,0x3d,0x3d,0x3d,0x3e,0x3e,0x3f,
                0x3f,0x3f,0x40,0x40,0x41,0x41,0x41,0x42,0x42,0x43,0x43,0x43,0x44,0x44,0x45,0x45,
                0x45,0x46,0x46,0x46,0x47,0x47,0x48,0x48,0x48,0x49,0x49,0x4a,0x4a,0x4a,0x4b,0x4b,
                0x4c,0x4c,0x4c,0x4d,0x4d,0x4e,0x4e,0x4e,0x4f,0x4f,0x50,0x50,0x50,0x51,0x51,0x51,
                0x52,0x52,0x53,0x53,0x53,0x54,0x54,0x55,0x55,0x55,0x56,0x56,0x57,0x57,0x57,0x58,
                0x58,0x59,0x59,0x59,0x5a,0x5a,0x5a,0x5b,0x5b,0x5c,0x5c,0x5c,0x5d,0x5d,0x5e,0x5e,
                0x5e,0x5f,0x5f,0x60,0x60,0x60,0x61,0x61,0x62,0x62,0x62,0x63,0x63,0x63,0x64,0x64
    };
    public int mBus = 0;
    public int mArea = 0;
    public int mCh = 0;
    public int mValue = -1;
    public int mA = -1;
    public int mV = -1;
    public CProject mProject = null;
    public Vector<CUIBase> arrBases;

    //for temp
    public int mTemp = 26;
    public int mSetTemp = 26;
    public boolean mSavePower = false;
    public int  mHotMode = 0;
    public int  mFunMode = 0;

    public void editUI(CUIBase base){
        if(arrBases == null)
            arrBases = new Vector<CUIBase>();
        arrBases.add(base);
    }

    public CChannelValue channnelValue(int bus,int area,int ch,CProject project)
    {
        CChannelValue ret = new CChannelValue();
        ret.mBus = bus;
        ret.mArea = area;
        ret.mCh = ch;
        ret.mProject = project;

        return ret;
    }

    public void setValue(int value)
    {
        mValue = value;
        if(arrBases == null || arrBases.size()<1)
            return;
        for (CUIBase base:arrBases)
        {
            base.updateValueFromCV(this);
        }
    }
    public void setTemp(int value)
    {
        mTemp = value;
        if(arrBases == null || arrBases.size()<1)
            return;
        for (CUIBase base:arrBases)
        {
            base.updateValueFromCV(this);
        }
    }

    public void setSetTemp(int value){
        mSetTemp = value;
        if(arrBases == null || arrBases.size()<1)
            return;
        for (CUIBase base:arrBases)
        {
            base.updateValueFromCV(this);
        }
    }

    public  void handleTempCmd(byte[] buf){
        if(buf[1] == 0x28){
            if((buf[5] & 0xff) >50 && (buf[4] & 0x7f) == 0)
                mSavePower = ((buf[4] & 0xff) >> 7) != 0;
            if((buf[5] & 0xff) <= 50)
                mSetTemp = (buf[5] & 0xff);

            byte b = (byte) (buf[4] & 0x7f);
            if ((b >> 4) > 0)
                mHotMode = b >> 4;
            if ((b & 0x0f) > 0)
                mFunMode = b & 0x0f;
            if(arrBases == null || arrBases.size()<1)
                return;
            for (CUIBase base:arrBases)
            {
                base.updateValueFromCV(this);
            }
        }
        else {
            buf[1] = 0x28;
            int temp = mSetTemp;
            if(buf[5]==1)
                temp += buf[6];
            else
                temp -= buf[6];
            if(temp>50)
                temp = 50;
            else if(temp<0)
                temp = 0;
            setSetTemp(temp);
        }
        //update buf
        buf[4] = (byte)mFunMode;
        if(mSavePower)
            buf[4] |= 0x80;

        buf[4] |= mHotMode << 4;
        buf[5] = (byte)mSetTemp;
        buf[6] = (byte)0xff;
        buf[7] = CBase.calcCheck(buf,7);
    }

    public static byte valueToPercent(int value)
    {
        if(value<0 || value>=256)
            return 0;
        return lv_tbl256[value];
    }

    public static byte percentToValue(int percent)
    {
        for (int i=0;i<256;i++)
            if(lv_tbl256[i] == percent)
                return (byte)i;
        return (byte)0;
    }

}
